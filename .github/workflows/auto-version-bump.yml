name: Auto Version Bump

on:
  push:
    branches:
      - master
      - main

jobs:
  release:
    name: Automatic Version Bump and Release
    runs-on: ubuntu-latest
    concurrency: release
    permissions:
      id-token: write
      contents: write
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11.3'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install python-semantic-release
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      
      - name: Configure Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
      
      - name: Run tests before release
        run: |
          pip install pytest
          pytest
      
      - name: Python Semantic Release
        id: release
        uses: python-semantic-release/python-semantic-release@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Update README with new version
        if: steps.release.outputs.released == 'true'
        run: |
          # Get the new version
          NEW_VERSION=$(python -c "import version; print(version.__version__)")
          echo "New version: $NEW_VERSION"
          
          # Update README.md with the new version
          python update_readme_version.py
          
          # Commit the README update if there are changes
          if ! git diff --quiet README.md; then
            git add README.md
            git commit -m "docs: update README with version $NEW_VERSION [skip ci]"
            git push origin HEAD:${{ github.ref_name }}
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Publish release info
        if: steps.release.outputs.released == 'true'
        run: |
          echo "::notice::ðŸš€ Released version ${{ steps.release.outputs.tag }}" 